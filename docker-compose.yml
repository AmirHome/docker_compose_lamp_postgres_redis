version: "3"

networks:
  webnet:
    driver: bridge  # Use the "overlay" driver for multi-host networking

services:

  webserver:
    build:
      context: ./docker/bin/${PHPVERSION}
    container_name: "${COMPOSE_PROJECT_NAME}-${PHPVERSION}"
    restart: "always"
    ports:
      - "${HOST_MACHINE_UNSECURE_HOST_PORT}:80"
      - "${HOST_MACHINE_SECURE_HOST_PORT}:443"
    links:
      - database
    volumes:
      - ${BACKEND_ROOT-./www}:/var/www/html:rw
      - ${PHP_INI-./docker/config/php/php.ini}:/usr/local/etc/php/php.ini
      - ${SSL_DIR-./docker/config/ssl}:/etc/apache2/ssl/
      - ${VHOSTS_DIR-./docker/config/vhosts}:/etc/apache2/sites-enabled
      - ${LOG_DIR-./docker/logs/apache2}:/var/log/apache2
      - ${XDEBUG_LOG_DIR-./docker/logs/xdebug}:/var/log/xdebug
    environment:
      APACHE_DOCUMENT_ROOT: /var/www/html
      PMA_PORT: ${HOST_MACHINE_PMA_PORT}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      HOST_MACHINE_MYSQL_PORT: ${HOST_MACHINE_MYSQL_PORT}
      XDEBUG_CONFIG: "client_host=host.docker.internal remote_port=${XDEBUG_PORT}"
      HOST_MACHINE_SECURE_HOST_PORT: ${HOST_MACHINE_SECURE_HOST_PORT}
      HOST_MACHINE_UNSECURE_HOST_PORT: ${HOST_MACHINE_UNSECURE_HOST_PORT}
    extra_hosts:
      - "host.docker.internal:host-gateway"
      - "localhost:127.0.0.1"
      - "test.localhost:127.0.0.1"
      - "laravel.localhost:127.0.0.1"
      - "eltesan.localhost:127.0.0.1"
      - "shop.localhost:127.0.0.1"
      - "e-shop.localhost:127.0.0.1"
      - "yanhak.localhost:127.0.0.1"
      - "patient.localhost:127.0.0.1"
    networks:
      - webnet

  # nextjs-dev:
  #   build:
  #     dockerfile: ./docker/bin/node/Dockerfile.dev
  #     #dockerfile: ./docker/bin/node/Dockerfile.dev
  #   container_name: ${APP_NAME}-nextjs-dev
  #   ports:
  #     - 5858:5858
  #   restart: no
  #   volumes:
  #     - ${FERONTEND_ROOT-./www}:/app
  #     - /app/node_modules
  #     - /app/.next
  #   # depends_on: 
  #   #   - api
  #   networks:
  #     - webnet
  # #   deploy:
  # #     replicas: 1

  # nginx:
  #   image: nginx:1.23.3-alpine
  #   container_name: "${COMPOSE_PROJECT_NAME}-nginx"
  #   ports:
  #     - ${WEB_NEXTJS_PORT_HTTP}:80
  #     - ${WEB_NEXTJS_PORT_HTTPS}:443
  #   environment:
  #     - WEB_NEXTJS_PORT_HTTPS=$WEB_NEXTJS_PORT_HTTPS
  #   volumes:
  #     - ./docker/config/ssl:/etc/nginx/ssl:ro
  #     - ./docker/config/nginx/nginx.conf:/etc/nginx/nginx.conf
  #   # depends_on: 
  #   #   - api
  #   networks:
  #     - webnet
  #   restart: always
  #   deploy:
  #     replicas: 0

  # Run solo docker-compose up --build database
  database:
    build:
      context: "./docker/bin/${DATABASE}"
    container_name: "${COMPOSE_PROJECT_NAME}-${DATABASE}"
    restart: "no"
    ports:
      - "127.0.0.1:${HOST_MACHINE_MYSQL_PORT}:3306"
    volumes:
      - ${MYSQL_INITDB_DIR-./docker/config/initdb}:/docker-entrypoint-initdb.d
      - ${MYSQL_DATA_DIR-./docker/data/mysql}:/var/lib/mysql
      - ${MYSQL_LOG_DIR-./docker/logs/mysql}:/var/log/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - webnet

  # postgres:
  #   image: "postgres:${POSTGRES_VERSION}"
  #   container_name: "postgres-${POSTGRES_VERSION}"
  #   ports:
  #     - "127.0.0.1:${HOST_MACHINE_POSTGRES_PORT}:5432"   # PostgreSQL Connection
  #   environment:
  #     POSTGRES_DB: ${POSTGRES_DB}
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #   volumes:
  #     - ${POSTGRES_DATA_DIR-./docker/data/postgres}:/var/lib/postgresql/data
  #     - ${POSTGRES_LOG_DIR-./docker/logs/postgres}:/var/log/postgresql
  #   networks:
  #     - webnet

  phpmyadmin:
    image: phpmyadmin
    container_name: "${COMPOSE_PROJECT_NAME}-phpmyadmin"
    links:
      - database
    environment:
      PMA_HOST: database
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      UPLOAD_LIMIT: ${UPLOAD_LIMIT}
      MEMORY_LIMIT: ${MEMORY_LIMIT}
    ports:
      - "${HOST_MACHINE_PMA_PORT}:80"
      - "${HOST_MACHINE_PMA_SECURE_PORT}:443"
    volumes:
      - /sessions
      - ${PHP_INI-./docker/config/php/php.ini}:/usr/local/etc/php/conf.d/php-phpmyadmin.ini
    networks:
      - webnet

  redis:
    container_name: "${COMPOSE_PROJECT_NAME}-redis"
    image: redis:latest
    ports:
      - "127.0.0.1:${HOST_MACHINE_REDIS_PORT}:6379"
    networks:
      - webnet
